// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenSaha.Models;

#nullable disable

namespace OpenSaha.Migrations
{
    [DbContext(typeof(SahaContext))]
    [Migration("20230614175035_firstdb")]
    partial class firstdb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("OpenSaha.Models.Cafe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Act")
                        .HasColumnType("int");

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<long>("Barkod")
                        .HasColumnType("bigint");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Fiyat")
                        .HasColumnType("double");

                    b.Property<DateTime>("GuncellemeTarih")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SahaId")
                        .HasColumnType("int");

                    b.Property<bool>("Stoklu")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("YoneticiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SahaId");

                    b.HasIndex("YoneticiId");

                    b.ToTable("Cafes");
                });

            modelBuilder.Entity("OpenSaha.Models.CafeTakip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Act")
                        .HasColumnType("int");

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<long>("Barkod")
                        .HasColumnType("bigint");

                    b.Property<int>("CafeId")
                        .HasColumnType("int");

                    b.Property<int>("RezervasyonId")
                        .HasColumnType("int");

                    b.Property<double>("Ucret")
                        .HasColumnType("double");

                    b.Property<int>("YoneticiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CafeId");

                    b.HasIndex("RezervasyonId");

                    b.HasIndex("YoneticiId");

                    b.ToTable("CafeTakips");
                });

            modelBuilder.Entity("OpenSaha.Models.EkipmanRezervasyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Act")
                        .HasColumnType("int");

                    b.Property<double>("Adet")
                        .HasColumnType("double");

                    b.Property<int>("EkipmanId")
                        .HasColumnType("int");

                    b.Property<int>("RezervasyonId")
                        .HasColumnType("int");

                    b.Property<double>("Ucret")
                        .HasColumnType("double");

                    b.Property<int>("YoneticiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EkipmanId");

                    b.HasIndex("RezervasyonId");

                    b.HasIndex("YoneticiId");

                    b.ToTable("EkipmanRezervasyons");
                });

            modelBuilder.Entity("OpenSaha.Models.Ekipmanlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasColumnType("longtext");

                    b.Property<int>("Act")
                        .HasColumnType("int");

                    b.Property<double>("Adet")
                        .HasColumnType("double");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Resim")
                        .HasColumnType("longtext");

                    b.Property<int>("SahaId")
                        .HasColumnType("int");

                    b.Property<double>("Ucret")
                        .HasColumnType("double");

                    b.Property<int>("YoneticiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SahaId");

                    b.HasIndex("YoneticiId");

                    b.ToTable("Ekipmanlars");
                });

            modelBuilder.Entity("OpenSaha.Models.Eslesme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Act")
                        .HasColumnType("int");

                    b.Property<DateTime>("AktifSure")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Deplasman")
                        .HasColumnType("int");

                    b.Property<int>("EvSahibi")
                        .HasColumnType("int");

                    b.Property<DateTime>("MacTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("OnayDurum")
                        .HasColumnType("int");

                    b.Property<string>("Sahalar")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("YoneticiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YoneticiId");

                    b.ToTable("Eslesmes");
                });

            modelBuilder.Entity("OpenSaha.Models.IlceListe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("IlceAdi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SehirId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SehirId");

                    b.ToTable("IlceListes");
                });

            modelBuilder.Entity("OpenSaha.Models.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Act")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DogumTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double?>("Puan")
                        .HasColumnType("double");

                    b.Property<string>("Soyisim")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<int?>("YoneticiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YoneticiId");

                    b.ToTable("Kullanicis");
                });

            modelBuilder.Entity("OpenSaha.Models.KullaniciPuanIslemleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Act")
                        .HasColumnType("int");

                    b.Property<int>("IslemTipi")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("OdemeTipi")
                        .HasColumnType("int");

                    b.Property<double?>("Puan")
                        .HasColumnType("double");

                    b.Property<double>("Ucret")
                        .HasColumnType("double");

                    b.Property<int?>("YoneticiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("YoneticiId");

                    b.ToTable("KullaniciPuanIslemleris");
                });

            modelBuilder.Entity("OpenSaha.Models.Odeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Act")
                        .HasColumnType("int");

                    b.Property<double?>("EkipmanUcret")
                        .HasColumnType("double");

                    b.Property<double?>("KafeUcret")
                        .HasColumnType("double");

                    b.Property<int>("OdemeTipleri")
                        .HasColumnType("int");

                    b.Property<int>("RezervasyonId")
                        .HasColumnType("int");

                    b.Property<int>("SahaId")
                        .HasColumnType("int");

                    b.Property<double?>("SahaUcret")
                        .HasColumnType("double");

                    b.Property<int?>("YoneticiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RezervasyonId");

                    b.HasIndex("SahaId");

                    b.HasIndex("YoneticiId");

                    b.ToTable("Odemes");
                });

            modelBuilder.Entity("OpenSaha.Models.Rezervasyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Act")
                        .HasColumnType("int");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<int?>("EslesmeId")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RandevuBaslangic")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("RandevuBitis")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SahaId")
                        .HasColumnType("int");

                    b.Property<int>("YoneticiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EslesmeId");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("SahaId");

                    b.HasIndex("YoneticiId");

                    b.ToTable("Rezervasyons");
                });

            modelBuilder.Entity("OpenSaha.Models.Saha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("AcilisSaat")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Act")
                        .HasColumnType("int");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IlceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("KapanisSaat")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("Ozellik")
                        .HasColumnType("longtext");

                    b.Property<int>("SahaTipi")
                        .HasColumnType("int");

                    b.Property<int>("SehirId")
                        .HasColumnType("int");

                    b.Property<double>("Ucret")
                        .HasColumnType("double");

                    b.Property<bool>("YirmiDortSaat")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("YoneticiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IlceId");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("SehirId");

                    b.HasIndex("YoneticiId");

                    b.ToTable("Sahas");
                });

            modelBuilder.Entity("OpenSaha.Models.SahaResim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Act")
                        .HasColumnType("int");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Resim")
                        .HasColumnType("longtext");

                    b.Property<int>("SahaId")
                        .HasColumnType("int");

                    b.Property<int>("YoneticiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SahaId");

                    b.HasIndex("YoneticiId");

                    b.ToTable("SahaResims");
                });

            modelBuilder.Entity("OpenSaha.Models.SehirListe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("SehirAdi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SehirListes");
                });

            modelBuilder.Entity("OpenSaha.Models.Slider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Act")
                        .HasColumnType("int");

                    b.Property<string>("ButonLink")
                        .HasColumnType("longtext");

                    b.Property<string>("ButonYazi")
                        .HasColumnType("longtext");

                    b.Property<string>("Resim1")
                        .HasColumnType("longtext");

                    b.Property<string>("Resim2")
                        .HasColumnType("longtext");

                    b.Property<string>("Yazi")
                        .HasColumnType("longtext");

                    b.Property<int>("YoneticiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YoneticiId");

                    b.ToTable("Sliders");
                });

            modelBuilder.Entity("OpenSaha.Models.StokTakip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Act")
                        .HasColumnType("int");

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<long>("Barkod")
                        .HasColumnType("bigint");

                    b.Property<double>("BirimFiyat")
                        .HasColumnType("double");

                    b.Property<int>("CafeId")
                        .HasColumnType("int");

                    b.Property<int>("Islem")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("YoneticiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CafeId");

                    b.HasIndex("YoneticiId");

                    b.ToTable("StokTakips");
                });

            modelBuilder.Entity("OpenSaha.Models.Takim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Act")
                        .HasColumnType("int");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IlceId")
                        .HasColumnType("int");

                    b.Property<int>("Kadro")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("SehirId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IlceId");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("SehirId");

                    b.ToTable("Takims");
                });

            modelBuilder.Entity("OpenSaha.Models.TakimTakvim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Act")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("SahaId")
                        .HasColumnType("int");

                    b.Property<int>("TakimId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TarihBaslangic")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("TarihBitis")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("SahaId");

                    b.HasIndex("TakimId");

                    b.ToTable("TakimTakvims");
                });

            modelBuilder.Entity("OpenSaha.Models.YonetimTablosu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Act")
                        .HasColumnType("int");

                    b.Property<int>("SahaSayisi")
                        .HasColumnType("int");

                    b.Property<int>("YoneticiSayisi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("YonetimTablosus");
                });

            modelBuilder.Entity("OpenSaha.Models.Cafe", b =>
                {
                    b.HasOne("OpenSaha.Models.Saha", "Saha")
                        .WithMany()
                        .HasForeignKey("SahaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.YonetimTablosu", "YonetimTablosu")
                        .WithMany()
                        .HasForeignKey("YoneticiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Saha");

                    b.Navigation("YonetimTablosu");
                });

            modelBuilder.Entity("OpenSaha.Models.CafeTakip", b =>
                {
                    b.HasOne("OpenSaha.Models.Cafe", "Cafe")
                        .WithMany("CafeTakips")
                        .HasForeignKey("CafeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.Rezervasyon", "Rezervasyon")
                        .WithMany("CafeTakips")
                        .HasForeignKey("RezervasyonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.YonetimTablosu", "YonetimTablosu")
                        .WithMany()
                        .HasForeignKey("YoneticiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cafe");

                    b.Navigation("Rezervasyon");

                    b.Navigation("YonetimTablosu");
                });

            modelBuilder.Entity("OpenSaha.Models.EkipmanRezervasyon", b =>
                {
                    b.HasOne("OpenSaha.Models.Ekipmanlar", "Ekipmanlar")
                        .WithMany("ekipmanRezervasyons")
                        .HasForeignKey("EkipmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.Rezervasyon", "Rezervasyon")
                        .WithMany("EkipmanRezervasyons")
                        .HasForeignKey("RezervasyonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.YonetimTablosu", "YonetimTablosu")
                        .WithMany()
                        .HasForeignKey("YoneticiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ekipmanlar");

                    b.Navigation("Rezervasyon");

                    b.Navigation("YonetimTablosu");
                });

            modelBuilder.Entity("OpenSaha.Models.Ekipmanlar", b =>
                {
                    b.HasOne("OpenSaha.Models.Saha", "Saha")
                        .WithMany("Ekipmanlars")
                        .HasForeignKey("SahaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.YonetimTablosu", "YonetimTablosu")
                        .WithMany()
                        .HasForeignKey("YoneticiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Saha");

                    b.Navigation("YonetimTablosu");
                });

            modelBuilder.Entity("OpenSaha.Models.Eslesme", b =>
                {
                    b.HasOne("OpenSaha.Models.YonetimTablosu", "YonetimTablosu")
                        .WithMany()
                        .HasForeignKey("YoneticiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YonetimTablosu");
                });

            modelBuilder.Entity("OpenSaha.Models.IlceListe", b =>
                {
                    b.HasOne("OpenSaha.Models.SehirListe", "SehirListe")
                        .WithMany("IlceListes")
                        .HasForeignKey("SehirId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SehirListe");
                });

            modelBuilder.Entity("OpenSaha.Models.Kullanici", b =>
                {
                    b.HasOne("OpenSaha.Models.YonetimTablosu", "YonetimTablosu")
                        .WithMany()
                        .HasForeignKey("YoneticiId");

                    b.Navigation("YonetimTablosu");
                });

            modelBuilder.Entity("OpenSaha.Models.KullaniciPuanIslemleri", b =>
                {
                    b.HasOne("OpenSaha.Models.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.YonetimTablosu", "YonetimTablosu")
                        .WithMany()
                        .HasForeignKey("YoneticiId");

                    b.Navigation("Kullanici");

                    b.Navigation("YonetimTablosu");
                });

            modelBuilder.Entity("OpenSaha.Models.Odeme", b =>
                {
                    b.HasOne("OpenSaha.Models.Rezervasyon", "Rezervasyon")
                        .WithMany()
                        .HasForeignKey("RezervasyonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.Saha", "Saha")
                        .WithMany()
                        .HasForeignKey("SahaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.YonetimTablosu", "YonetimTablosu")
                        .WithMany()
                        .HasForeignKey("YoneticiId");

                    b.Navigation("Rezervasyon");

                    b.Navigation("Saha");

                    b.Navigation("YonetimTablosu");
                });

            modelBuilder.Entity("OpenSaha.Models.Rezervasyon", b =>
                {
                    b.HasOne("OpenSaha.Models.Eslesme", "Eslesme")
                        .WithMany()
                        .HasForeignKey("EslesmeId");

                    b.HasOne("OpenSaha.Models.Kullanici", "Kullanici")
                        .WithMany("Rezervasyons")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.Saha", "Saha")
                        .WithMany("Rezervasyons")
                        .HasForeignKey("SahaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.YonetimTablosu", "YonetimTablosu")
                        .WithMany()
                        .HasForeignKey("YoneticiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eslesme");

                    b.Navigation("Kullanici");

                    b.Navigation("Saha");

                    b.Navigation("YonetimTablosu");
                });

            modelBuilder.Entity("OpenSaha.Models.Saha", b =>
                {
                    b.HasOne("OpenSaha.Models.IlceListe", "IlceListe")
                        .WithMany("Sahas")
                        .HasForeignKey("IlceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.Kullanici", "Kullanici")
                        .WithMany("Sahas")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.SehirListe", "SehirListe")
                        .WithMany("Sahas")
                        .HasForeignKey("SehirId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.YonetimTablosu", "YonetimTablosu")
                        .WithMany()
                        .HasForeignKey("YoneticiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IlceListe");

                    b.Navigation("Kullanici");

                    b.Navigation("SehirListe");

                    b.Navigation("YonetimTablosu");
                });

            modelBuilder.Entity("OpenSaha.Models.SahaResim", b =>
                {
                    b.HasOne("OpenSaha.Models.Saha", "Saha")
                        .WithMany("SahaResims")
                        .HasForeignKey("SahaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.YonetimTablosu", "YonetimTablosu")
                        .WithMany()
                        .HasForeignKey("YoneticiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Saha");

                    b.Navigation("YonetimTablosu");
                });

            modelBuilder.Entity("OpenSaha.Models.Slider", b =>
                {
                    b.HasOne("OpenSaha.Models.YonetimTablosu", "YonetimTablosu")
                        .WithMany()
                        .HasForeignKey("YoneticiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YonetimTablosu");
                });

            modelBuilder.Entity("OpenSaha.Models.StokTakip", b =>
                {
                    b.HasOne("OpenSaha.Models.Cafe", "Cafe")
                        .WithMany()
                        .HasForeignKey("CafeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.YonetimTablosu", "YonetimTablosu")
                        .WithMany()
                        .HasForeignKey("YoneticiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cafe");

                    b.Navigation("YonetimTablosu");
                });

            modelBuilder.Entity("OpenSaha.Models.Takim", b =>
                {
                    b.HasOne("OpenSaha.Models.IlceListe", "IlceListe")
                        .WithMany()
                        .HasForeignKey("IlceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.Kullanici", "Kullanici")
                        .WithMany("Takims")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.SehirListe", "SehirListe")
                        .WithMany()
                        .HasForeignKey("SehirId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IlceListe");

                    b.Navigation("Kullanici");

                    b.Navigation("SehirListe");
                });

            modelBuilder.Entity("OpenSaha.Models.TakimTakvim", b =>
                {
                    b.HasOne("OpenSaha.Models.Kullanici", "Kullanici")
                        .WithMany("TakimTakvims")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.Saha", "Saha")
                        .WithMany()
                        .HasForeignKey("SahaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenSaha.Models.Takim", "Takim")
                        .WithMany("TakimTakvims")
                        .HasForeignKey("TakimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Saha");

                    b.Navigation("Takim");
                });

            modelBuilder.Entity("OpenSaha.Models.Cafe", b =>
                {
                    b.Navigation("CafeTakips");
                });

            modelBuilder.Entity("OpenSaha.Models.Ekipmanlar", b =>
                {
                    b.Navigation("ekipmanRezervasyons");
                });

            modelBuilder.Entity("OpenSaha.Models.IlceListe", b =>
                {
                    b.Navigation("Sahas");
                });

            modelBuilder.Entity("OpenSaha.Models.Kullanici", b =>
                {
                    b.Navigation("Rezervasyons");

                    b.Navigation("Sahas");

                    b.Navigation("TakimTakvims");

                    b.Navigation("Takims");
                });

            modelBuilder.Entity("OpenSaha.Models.Rezervasyon", b =>
                {
                    b.Navigation("CafeTakips");

                    b.Navigation("EkipmanRezervasyons");
                });

            modelBuilder.Entity("OpenSaha.Models.Saha", b =>
                {
                    b.Navigation("Ekipmanlars");

                    b.Navigation("Rezervasyons");

                    b.Navigation("SahaResims");
                });

            modelBuilder.Entity("OpenSaha.Models.SehirListe", b =>
                {
                    b.Navigation("IlceListes");

                    b.Navigation("Sahas");
                });

            modelBuilder.Entity("OpenSaha.Models.Takim", b =>
                {
                    b.Navigation("TakimTakvims");
                });
#pragma warning restore 612, 618
        }
    }
}
